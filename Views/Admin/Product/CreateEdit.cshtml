@model Higertech.ViewModels.ProductVM

@{
    Layout = "~/Views/Shared/_ContentNavbarLayout.cshtml";
    ViewData["Title"] = "Dashboard - Analytics";
}
@section VendorStyles {
    @* <link rel="stylesheet" href="~/vendor/libs/apex-charts/apex-charts.css" /> *@
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.9.3/dropzone.min.css" />
    <style>
        .image-preview {
            max-width: 200px;
            max-height: 200px;
            margin-top: 10px;
        }

        .preview-container {
            margin-top: 10px;
        }

        .image-gallery {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-top: 15px;
        }
        
        .image-item {
            position: relative;
            width: 150px;
            height: 150px;
        }
        
        .image-item img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 4px;
        }
        
        .image-item .remove-image {
            position: absolute;
            top: 5px;
            right: 5px;
            background: rgba(255, 0, 0, 0.7);
            color: white;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            text-align: center;
            line-height: 20px;
            cursor: pointer;
        }
    </style>
}
@section VendorScripts {
    <script src="~/vendor/libs/apex-charts/apexcharts.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.9.3/min/dropzone.min.js"></script>
}

@* ************** Content ************** *@

<form id="form-product" data-parsley-validate class="tablelist-form parsley-validation" method="POST" novalidate
    autocomplete="off" onsubmit="createEditForm(this,event)">
    <div class="row">
        <div class="col-xxl-12 mb-6 order-0">
            <div class="card mb-5">
                <h5 class="card-header">
                    @(Model.id != Guid.Empty ? "Edit Data" : "Tambah Data")
                </h5>
                <div class="card-body">
                    <input type="hidden" asp-for="id" class="form-control" id="id">
                    <input type="hidden" asp-for="gambar_url" class="form-control" id="gambar_url">

                    <div>
                        <label for="productNama" class="form-label">Nama Produk</label>
                        <input type="text" 
                            asp-for="nama_produk" 
                            class="form-control" 
                            id="nama_produk"
                            placeholder="Masukkan nama produk"
                            required
                            data-parsley-required="true"
                            data-parsley-required-message="Nama produk harus diisi"
                            data-parsley-trigger="change">
                        <div id="productNamaHelp" class="form-text">Tuliskan nama produk.</div>
                    </div>

                    <div class="mt-3">
                        <label for="productDeskripsi" class="form-label">Deskripsi Produk</label>
                        <input type="text" asp-for="deskripsi" class="form-control" id="deskripsi" rows="3"
                            placeholder="Masukkan deskripsi produk">
                        <div id="productDeskripsiHelp" class="form-text">Tuliskan deskripsi untuk produk.</div>
                    </div>

                    <div class="mt-3">
                        <label for="kategori" class="form-label">Kategori</label>
                        <select asp-for="kategori" class="form-control" id="kategori">
                            <option value="">-- Pilih Kategori --</option>
                            <option value="hidrologi">hidrologi</option>
                            <option value="klimatologi">klimatologi</option>
                        </select>
                        <div id="kategoriHelp" class="form-text">Pilih kategori untuk produk.</div>
                    </div>
                    
                    <!-- New Fields -->
                    <div class="mt-3">
                        <label for="fitur" class="form-label">Fitur</label>
                        <textarea asp-for="fitur" class="form-control" id="fitur" rows="3"
                            placeholder="Masukkan fitur produk"></textarea>
                        <div id="fiturHelp" class="form-text">Tuliskan fitur apa saja pada produk. *Note (berikan tanda (/) untuk baris baru)</div>
                    </div>
                    
                    <div class="mt-3">
                        <label for="spesifikasi" class="form-label">Spesifikasi</label>
                        <textarea asp-for="spesifikasi" class="form-control" id="spesifikasi" rows="3"
                            placeholder="Masukkan spesifikasi produk"></textarea>
                        <div id="spesifikasiHelp" class="form-text">Tuliskan spesifikasi apa saja pada produk. *Note (berikan tanda (/) untuk baris baru)</div>
                    </div>
                    
                    <div class="mt-3">
                        <label for="aplikasi" class="form-label">Aplikasi</label>
                        <textarea asp-for="aplikasi" class="form-control" id="aplikasi" rows="3"
                            placeholder="Masukkan aplikasi produk"></textarea>
                        <div id="aplikasiHelp" class="form-text">Tuliskan aplikasi apa saja pada produk. *Note (berikan tanda (/) untuk baris baru)</div>
                    </div>
                    
                    <div class="mt-3">
                        <label for="tkdn" class="form-label">TKDN</label>
                        <input type="text" asp-for="tkdn" class="form-control" id="tkdn"
                            placeholder="Masukkan TKDN">
                        <div id="tkdnHelp" class="form-text">Tuliskan tkdn pada produk. *Note (berikan % di akhir contoh (40%) dan jika tidak tkdn cukup berikan (-)).</div>
                    </div>

                    <div class="mt-3">
                        <label for="bmp" class="form-label">BMP</label>
                        <input type="text" asp-for="bmp" class="form-control" id="bmp"
                            placeholder="Masukkan BMP">
                        <div id="bmpHelp" class="form-text">Tuliskan bmp pada produk. *Note (berikan % di akhir contoh (40%) dan jika tidak tkdn cukup berikan (-)).</div>
                    </div>

                    <!-- Image Gallery for Existing Images -->
                    @if (Model.product_images != null && Model.product_images.Count > 0)
                    {
                        <div class="mt-3">
                            <label class="form-label">Gambar Saat Ini</label>
                            <div class="image-gallery" id="existing-images">
                                @foreach (var img in Model.product_images)
                                {
                                    <div class="image-item" data-id="@img.id" data-url="@img.gambar_url">
                                        <img src="@Url.Content(img.gambar_url)" alt="Gambar Produk" />
                                        <span class="remove-image" onclick="removeExistingImage(this)">Ã—</span>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                    
                    <!-- Dropzone for Multiple Image Upload -->
                    <div class="mt-3">
                        <label class="form-label">Upload Gambar Produk (Maks. 10)</label>
                        <div id="dropzone-upload" class="dropzone">
                            <div class="dz-message needsclick">
                                <i class="bx bx-cloud-upload"></i>
                                <h5>Tarik foto ke sini atau klik untuk upload</h5>
                                <span class="text-muted">Upload hingga 10 foto produk</span>
                            </div>
                        </div>
                        <div id="upload-preview-container" class="mt-2"></div>
                    </div>
                    <div class="mt-3 float-end">
                        <button type="submit" class="btn btn-primary">Save</button>
                        <a href="/Admin/Product" class="btn btn-info ms-2">Back</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

@section PageScripts {
    <script src="~/js/dashboards-analytics.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/parsley.js/2.9.2/parsley.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.1.0/js/select2.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.6.7/axios.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        // Store uploaded files
        let uploadedFiles = [];
        // Track existing images to be removed
        let removedImages = [];
        
        // Initialize Dropzone
        let myDropzone = new Dropzone("#dropzone-upload", {
            url: "/Admin/Product/UploadProductImage", // This will be handled via formData instead
            autoProcessQueue: false,
            addRemoveLinks: true,
            maxFiles: 10,
            acceptedFiles: "image/*",
            maxFilesize: 5, // MB
            init: function() {
                this.on("addedfile", function(file) {
                    const existingCount = document.querySelectorAll('#existing-images .image-item').length;
                    const totalCount = this.files.length + existingCount - removedImages.length;
                    
                    if (totalCount > 10) {
                        this.removeFile(file);
                        showMessage("error", "Batas Upload", "Maksimal 10 gambar yang dapat diupload");
                    } else {
                        uploadedFiles.push(file);
                    }
                });
                
                this.on("removedfile", function(file) {
                    uploadedFiles = uploadedFiles.filter(f => f !== file);
                });
                
                // Limit new uploads based on existing images
                const existingImages = document.querySelectorAll('#existing-images .image-item').length;
                this.options.maxFiles = 10 - existingImages;
            }
        });
        
        // Remove existing image
        function removeExistingImage(element) {
            const imageItem = element.parentElement;
            const imageUrl = imageItem.getAttribute('data-url');
            
            // Add to removed images list
            removedImages.push(imageUrl);
            
            // Remove from display
            imageItem.remove();
            
            // Update Dropzone max files
            myDropzone.options.maxFiles = 10 - document.querySelectorAll('#existing-images .image-item').length + removedImages.length;
        }

        window.createEditForm = (form, evt) => {
            evt.preventDefault();

            console.log("Save Data");
            var btnSubmit = $(form).find("button[type=submit]");
            var id = document.getElementById("id").value;
            var productName = document.getElementById("nama_produk").value;

            // Periksa apakah nama produk sudah digunakan
            axios.get(`/Admin/Product/CheckDuplicateName`, {
                params: {
                    productName: productName,
                    id: id || null
                }
            })
            .then(response => {
                if (response.data.isDuplicate) {
                    showMessage("error", "Validasi Gagal!", "Nama produk sudah digunakan. Silakan gunakan nama lain.");
                    afterLoadingButton(btnSubmit);
                    return;
                }

                // Jika valid, lanjutkan dengan pengiriman data
                $(form).parsley().validate();
                if ($(form).parsley().isValid()) {
                    beforeLoadingButton(btnSubmit);
                    let formData = new FormData();
                    formData.append("id", id);
                    formData.append("nama_produk", productName);
                    formData.append("deskripsi", document.getElementById("deskripsi").value);
                    formData.append("kategori", document.getElementById("kategori").value);
                    formData.append("fitur", document.getElementById("fitur").value);
                    formData.append("spesifikasi", document.getElementById("spesifikasi").value);
                    formData.append("aplikasi", document.getElementById("aplikasi").value);
                    formData.append("tkdn", document.getElementById("tkdn").value);
                    formData.append("bmp", document.getElementById("bmp").value);

                    // Add removed images to formData
                    if (removedImages.length > 0) {
                        removedImages.forEach((url, index) => {
                            formData.append(`removed_images[${index}]`, url);
                        });
                    }

                    // Add files from Dropzone
                    if (uploadedFiles.length > 0) {
                        uploadedFiles.forEach(file => {
                            formData.append("files", file);
                        });
                    }

                    console.log("FormData entries:", Array.from(formData.entries()).map(e => e[0]));

                    postData("/Admin/Product", formData)
                        .then((res) => {
                            let result = res.data;
                            if (result.code == 200) {
                                showMessage("success", "Sukses!", result.message).then(() => {
                                    window.location.href = "/Admin/Product";
                                });
                            } else {
                                showMessage("error", "Gagal!", result.message);
                            }
                            afterLoadingButton(btnSubmit);
                        })
                        .catch((err) => {
                            console.log(err);
                            afterLoadingButton(btnSubmit);
                        });
                }
            })
            .catch(error => {
                console.error("Error checking product name:", error);
                showMessage("error", "Error!", "Terjadi kesalahan saat memeriksa nama produk.");
                afterLoadingButton(btnSubmit);
            });
        };
    </script>
}